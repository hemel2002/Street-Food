<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Complaints and Replies</title>
    <!-- MDBootstrap CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.0.0/mdb.min.css" rel="stylesheet" />
    <style>
        .complaint-card {
            margin-bottom: 2rem;
        }

        .reply-card {
            margin-left: 2rem;
            margin-top: 1rem;
        }
    </style>
</head>

<body>
    <div class="container mt-5">
        <h1 class="mb-4">Submitted Complaints and Admin Replies</h1>
        <div class="row" id="complaints-section">
            <!-- Complaint and Reply Cards will be inserted here by JavaScript -->
        </div>
    </div>

    <!-- MDBootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.0.0/mdb.min.js"></script>
    <script>
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);
        const V_ID = urlParams.get('V_ID');
        let complaints = [];

        const getComplaints = async () => {
            try {
                const res = await axios.get(`/user/<%= id %>/complaint?request=json&V_ID=${V_ID}`);
                complaints = res.data;
                console.log(complaints);
            } catch (error) {
                console.error('Error fetching data:', error);
                document.getElementById('complaints-section').innerHTML = '<p class="text-danger">Failed to load complaints. Please try again later.</p>';
            }
        }

        const editComplaint = (C_ID) => {
            // Logic to handle editing a complaint
            const complaintText = prompt("Edit your complaint:");
            if (complaintText) {
                // Send updated complaint to server
                axios.put(`/user/<%= id %>/complaint/edit`, { C_ID, complaint: complaintText })
                    .then(response => {
                        alert('Complaint updated successfully.');
                        getComplaints();
                    })
                    .catch(error => {
                        console.error('Error updating complaint:', error);
                    });
            }
        }

        const deleteComplaint = (C_ID) => {
            // Logic to handle deleting a complaint
            const confirmation = confirm("Are you sure you want to delete this complaint?");
            if (confirmation) {
                axios.delete(`/user/<%= id %>/complaint/delete`, { data: { C_ID } })
                    .then(response => {
                        alert('Complaint deleted successfully.');
                        getComplaints();
                    })
                    .catch(error => {
                        console.error('Error deleting complaint:', error);
                    });
            }
        }

        function renderComplaints() {
            const complaintsSection = document.getElementById('complaints-section');
            complaintsSection.innerHTML = '';

            complaints.forEach(complaint => {
                const complaintCard = `
                    <div class="col-12 complaint-card">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">Complaint from ${complaint.C_EMAIL}</h5>
                                <p class="card-text">${complaint.COMPLAINT.COMPLAINT}</p>
                                <p class="text-muted mb-0">Submitted on: ${complaint.COMPLAINT.C_COMPLAINT_DATE}</p>
                                <div class="mt-3">
                                    <button class="btn btn-warning btn-sm" onclick="editComplaint('${complaint.C_ID}')">Edit</button>
                                    <button class="btn btn-danger btn-sm" onclick="deleteComplaint('${complaint.C_ID}')">Delete</button>
                                </div>
                            </div>
                        </div>
                        <div class="card reply-card">
                            <div class="card-body">
                                <h6 class="card-title text-success">Admin Reply</h6>
                                <p class="card-text text-warning ">${complaint?.COMPLAINT.MESSAGE??"No reply yet"}</p>
                                <p class="text-muted mb-0">Replied on: ${complaint.COMPLAINT.A_REPLY_DATE}</p>
                            </div>
                        </div>
                    </div>
                `;
                complaintsSection.insertAdjacentHTML('beforeend', complaintCard);
            });
        }

        document.addEventListener('DOMContentLoaded', async () => {
            await getComplaints();
            renderComplaints();
        });
    </script>
</body>

</html>