{"version":3,"file":"index.min.js","sources":["../src/autocomplete.ts"],"sourcesContent":["import countiesData from \"./countries.json\";\nexport class GeocoderAutocomplete {\n    container;\n    apiKey;\n    inputElement;\n    inputClearButton;\n    autocompleteItemsElement = null;\n    /* Focused item in the autocomplete list. This variable is used to navigate with buttons */\n    focusedItemIndex;\n    /* Current autocomplete items data (GeoJSON.Feature) */\n    currentItems;\n    /* Active request promise reject function. To be able to cancel the promise when a new request comes */\n    currentPromiseReject;\n    /* Active place details request promise reject function */\n    currentPlaceDetailsPromiseReject;\n    /* We set timeout before sending a request to avoid unnecessary calls */\n    currentTimeout;\n    changeCallbacks = [];\n    suggestionsChangeCallbacks = [];\n    inputCallbacks = [];\n    openCallbacks = [];\n    closeCallbacks = [];\n    preprocessHook;\n    postprocessHook;\n    suggestionsFilter;\n    sendGeocoderRequestAlt;\n    sendPlaceDetailsRequestAlt;\n    geocoderUrl = \"https://api.geoapify.com/v1/geocode/autocomplete\";\n    placeDetailsUrl = \"https://api.geoapify.com/v2/place-details\";\n    options = {\n        limit: 5,\n        debounceDelay: 100\n    };\n    BY_COUNTRYCODE = 'countrycode';\n    BY_RECT = 'rect';\n    BY_CIRCLE = 'circle';\n    BY_PROXIMITY = 'proximity';\n    BY_PLACE = 'place';\n    constructor(container, apiKey, options) {\n        this.container = container;\n        this.apiKey = apiKey;\n        this.options = options ? { ...this.options, ...options } : this.options;\n        this.options.filter = this.options.filter || {};\n        this.options.bias = this.options.bias || {};\n        if (this.options.countryCodes) {\n            this.addFilterByCountry(this.options.countryCodes);\n        }\n        if (this.options.position) {\n            this.addBiasByProximity(this.options.position);\n        }\n        // create input element\n        this.inputElement = document.createElement(\"input\");\n        this.inputElement.classList.add(\"geoapify-autocomplete-input\");\n        this.inputElement.setAttribute(\"type\", \"text\");\n        this.inputElement.setAttribute(\"placeholder\", this.options.placeholder || \"Enter an address here\");\n        this.container.appendChild(this.inputElement);\n        // add clear button to input element\n        this.inputClearButton = document.createElement(\"div\");\n        this.inputClearButton.classList.add(\"geoapify-close-button\");\n        this.addIcon(this.inputClearButton, 'close');\n        this.inputClearButton.addEventListener(\"click\", this.clearFieldAndNotify.bind(this), false);\n        this.container.appendChild(this.inputClearButton);\n        this.inputElement.addEventListener('input', this.onUserInput.bind(this), false);\n        this.inputElement.addEventListener('keydown', this.onUserKeyPress.bind(this), false);\n        document.addEventListener(\"click\", (event) => {\n            if (event.target !== this.inputElement) {\n                this.closeDropDownList();\n            }\n            else if (!this.autocompleteItemsElement) {\n                // open dropdown list again\n                this.openDropdownAgain();\n            }\n        });\n    }\n    setType(type) {\n        this.options.type = type;\n    }\n    setLang(lang) {\n        this.options.lang = lang;\n    }\n    setCountryCodes(codes) {\n        console.warn(\"WARNING! Obsolete function called. Function setCountryCodes() has been deprecated, please use the new addFilterByCountry() function instead!\");\n        this.options.countryCodes = codes;\n    }\n    setPosition(position) {\n        console.warn(\"WARNING! Obsolete function called. Function setPosition() has been deprecated, please use the new addBiasByProximity() function instead!\");\n        this.options.position = position;\n    }\n    setLimit(limit) {\n        this.options.limit = limit;\n    }\n    setValue(value) {\n        if (!value) {\n            this.inputClearButton.classList.remove(\"visible\");\n        }\n        else {\n            this.inputClearButton.classList.add(\"visible\");\n        }\n        this.inputElement.value = value;\n    }\n    getValue() {\n        return this.inputElement.value;\n    }\n    addFilterByCountry(codes) {\n        this.options.filter[this.BY_COUNTRYCODE] = codes;\n    }\n    addFilterByCircle(filterByCircle) {\n        this.options.filter[this.BY_CIRCLE] = filterByCircle;\n    }\n    addFilterByRect(filterByRect) {\n        this.options.filter[this.BY_RECT] = filterByRect;\n    }\n    addFilterByPlace(filterByPlace) {\n        this.options.filter[this.BY_PLACE] = filterByPlace;\n    }\n    clearFilters() {\n        this.options.filter = {};\n    }\n    addBiasByCountry(codes) {\n        this.options.bias[this.BY_COUNTRYCODE] = codes;\n    }\n    addBiasByCircle(biasByCircle) {\n        this.options.bias[this.BY_CIRCLE] = biasByCircle;\n    }\n    addBiasByRect(biasByRect) {\n        this.options.bias[this.BY_RECT] = biasByRect;\n    }\n    addBiasByProximity(biasByProximity) {\n        this.options.bias[this.BY_PROXIMITY] = biasByProximity;\n    }\n    clearBias() {\n        this.options.bias = {};\n    }\n    on(operation, callback) {\n        if (operation === 'select' && this.changeCallbacks.indexOf(callback) < 0) {\n            this.changeCallbacks.push(callback);\n        }\n        if (operation === 'suggestions' && this.suggestionsChangeCallbacks.indexOf(callback) < 0) {\n            this.suggestionsChangeCallbacks.push(callback);\n        }\n        if (operation === 'input' && this.inputCallbacks.indexOf(callback) < 0) {\n            this.inputCallbacks.push(callback);\n        }\n        if (operation === 'close' && this.closeCallbacks.indexOf(callback) < 0) {\n            this.closeCallbacks.push(callback);\n        }\n        if (operation === 'open' && this.openCallbacks.indexOf(callback) < 0) {\n            this.openCallbacks.push(callback);\n        }\n    }\n    off(operation, callback) {\n        if (operation === 'select' && this.changeCallbacks.indexOf(callback) >= 0) {\n            this.changeCallbacks.splice(this.changeCallbacks.indexOf(callback), 1);\n        }\n        else if (operation === 'select' && !callback) {\n            this.changeCallbacks = [];\n        }\n        if (operation === 'suggestions' && this.suggestionsChangeCallbacks.indexOf(callback) >= 0) {\n            this.suggestionsChangeCallbacks.splice(this.suggestionsChangeCallbacks.indexOf(callback), 1);\n        }\n        else if (operation === 'suggestions' && !callback) {\n            this.suggestionsChangeCallbacks = [];\n        }\n        if (operation === 'input' && this.inputCallbacks.indexOf(callback) >= 0) {\n            this.inputCallbacks.splice(this.inputCallbacks.indexOf(callback), 1);\n        }\n        else if (operation === 'input' && !callback) {\n            this.inputCallbacks = [];\n        }\n        if (operation === 'close' && this.closeCallbacks.indexOf(callback) >= 0) {\n            this.closeCallbacks.splice(this.closeCallbacks.indexOf(callback), 1);\n        }\n        else if (operation === 'close' && !callback) {\n            this.closeCallbacks = [];\n        }\n        if (operation === 'open' && this.openCallbacks.indexOf(callback) >= 0) {\n            this.openCallbacks.splice(this.openCallbacks.indexOf(callback), 1);\n        }\n        else if (operation === 'open' && !callback) {\n            this.openCallbacks = [];\n        }\n    }\n    once(operation, callback) {\n        this.on(operation, callback);\n        const current = this;\n        const currentListener = () => {\n            current.off(operation, callback);\n            current.off(operation, currentListener);\n        };\n        this.on(operation, currentListener);\n    }\n    setSuggestionsFilter(suggestionsFilterFunc) {\n        if (suggestionsFilterFunc && typeof suggestionsFilterFunc === 'function') {\n            this.suggestionsFilter = suggestionsFilterFunc;\n        }\n        else {\n            this.suggestionsFilter = null;\n        }\n    }\n    setPreprocessHook(preprocessHookFunc) {\n        if (preprocessHookFunc && typeof preprocessHookFunc === 'function') {\n            this.preprocessHook = preprocessHookFunc;\n        }\n        else {\n            this.preprocessHook = null;\n        }\n    }\n    setPostprocessHook(postprocessHookFunc) {\n        if (postprocessHookFunc && typeof postprocessHookFunc === 'function') {\n            this.postprocessHook = postprocessHookFunc;\n        }\n        else {\n            this.postprocessHook = null;\n        }\n    }\n    setSendGeocoderRequestFunc(sendGeocoderRequestFunc) {\n        if (sendGeocoderRequestFunc && typeof sendGeocoderRequestFunc === 'function') {\n            this.sendGeocoderRequestAlt = sendGeocoderRequestFunc;\n        }\n        else {\n            this.sendGeocoderRequestAlt = null;\n        }\n    }\n    setSendPlaceDetailsRequestFunc(sendPlaceDetailsRequestFunc) {\n        if (sendPlaceDetailsRequestFunc && typeof sendPlaceDetailsRequestFunc === 'function') {\n            this.sendPlaceDetailsRequestAlt = sendPlaceDetailsRequestFunc;\n        }\n        else {\n            this.sendPlaceDetailsRequestAlt = null;\n        }\n    }\n    isOpen() {\n        return !!this.autocompleteItemsElement;\n    }\n    close() {\n        this.closeDropDownList();\n    }\n    open() {\n        if (!this.isOpen()) {\n            this.openDropdownAgain();\n        }\n    }\n    sendGeocoderRequest(value) {\n        return new Promise((resolve, reject) => {\n            this.currentPromiseReject = reject;\n            let url = this.generateUrl(value);\n            fetch(url)\n                .then((response) => {\n                if (response.ok) {\n                    response.json().then(data => resolve(data));\n                }\n                else {\n                    response.json().then(data => reject(data));\n                }\n            });\n        });\n    }\n    sendPlaceDetailsRequest(feature) {\n        return new Promise((resolve, reject) => {\n            if (feature.properties.datasource?.sourcename !== 'openstreetmap' || !feature.properties.place_id) {\n                // only OSM data has detailed information; return the original object if the source is different from OSM\n                resolve(feature);\n                return;\n            }\n            this.currentPlaceDetailsPromiseReject = reject;\n            let url = this.generatePlacesUrlUrl(feature.properties.place_id);\n            fetch(url)\n                .then((response) => {\n                if (response.ok) {\n                    response.json().then(data => {\n                        if (!data.features.length) {\n                            resolve(feature);\n                        }\n                        resolve(data.features[0]);\n                    });\n                }\n                else {\n                    response.json().then(data => reject(data));\n                }\n            });\n        });\n    }\n    /* Execute a function when someone writes in the text field: */\n    onUserInput(event) {\n        let currentValue = this.inputElement.value;\n        let userEnteredValue = this.inputElement.value;\n        this.inputCallbacks.forEach(callback => callback(currentValue));\n        /* Close any already open dropdown list */\n        this.closeDropDownList();\n        this.focusedItemIndex = -1;\n        // Cancel previous request\n        if (this.currentPromiseReject) {\n            this.currentPromiseReject({\n                canceled: true\n            });\n            this.currentPromiseReject = null;\n        }\n        // Cancel previous timeout\n        if (this.currentTimeout) {\n            window.clearTimeout(this.currentTimeout);\n            this.currentTimeout = null;\n        }\n        if (!currentValue) {\n            this.inputClearButton.classList.remove(\"visible\");\n            return false;\n        }\n        // Show clearButton when there is a text\n        this.inputClearButton.classList.add(\"visible\");\n        this.currentTimeout = window.setTimeout(() => {\n            /* Create a new promise and send geocoding request */\n            if (this.preprocessHook && typeof this.preprocessHook === 'function') {\n                currentValue = this.preprocessHook(currentValue);\n            }\n            let promise;\n            if (this.sendGeocoderRequestAlt) {\n                promise = this.sendGeocoderRequestAlt(currentValue, this);\n            }\n            else {\n                promise = this.sendGeocoderRequest(currentValue);\n            }\n            promise.then((data) => {\n                if (data.features && data.features.length &&\n                    data?.query?.parsed &&\n                    (this.options.allowNonVerifiedHouseNumber || this.options.allowNonVerifiedStreet)) {\n                    this.extendByNonVerifiedValues(data.features, data?.query?.parsed);\n                }\n                this.currentItems = data.features;\n                if (this.currentItems && this.currentItems.length && this.suggestionsFilter && typeof this.suggestionsFilter === 'function') {\n                    this.currentItems = this.suggestionsFilter(this.currentItems);\n                }\n                this.notifySuggestions(this.currentItems);\n                if (!this.currentItems.length) {\n                    return;\n                }\n                /*create a DIV element that will contain the items (values):*/\n                this.autocompleteItemsElement = document.createElement(\"div\");\n                this.autocompleteItemsElement.setAttribute(\"class\", \"geoapify-autocomplete-items\");\n                this.notifyOpened();\n                /* Append the DIV element as a child of the autocomplete container:*/\n                this.container.appendChild(this.autocompleteItemsElement);\n                /* For each item in the results */\n                this.currentItems.forEach((feature, index) => {\n                    /* Create a DIV element for each element: */\n                    const itemElement = document.createElement(\"div\");\n                    itemElement.classList.add('geoapify-autocomplete-item');\n                    if (!this.options.skipIcons) {\n                        const iconElement = document.createElement(\"span\");\n                        iconElement.classList.add('icon');\n                        this.addFeatureIcon(iconElement, feature.properties.result_type, feature.properties.country_code);\n                        itemElement.appendChild(iconElement);\n                    }\n                    const textElement = document.createElement(\"span\");\n                    textElement.classList.add('address');\n                    if (this.postprocessHook && typeof this.postprocessHook === 'function') {\n                        const value = this.postprocessHook(feature);\n                        textElement.innerHTML = this.getStyledAddressSingleValue(value, userEnteredValue);\n                    }\n                    else {\n                        textElement.innerHTML = this.getStyledAddress(feature.properties, userEnteredValue);\n                    }\n                    itemElement.appendChild(textElement);\n                    itemElement.addEventListener(\"click\", (e) => {\n                        event.stopPropagation();\n                        this.setValueAndNotify(this.currentItems[index]);\n                    });\n                    this.autocompleteItemsElement.appendChild(itemElement);\n                });\n            }, (err) => {\n                if (!err.canceled) {\n                    console.log(err);\n                }\n            });\n        }, this.options.debounceDelay);\n    }\n    addHouseNumberToFormatted(featureProperties, street, housenumber) {\n        const houseNumberAndStreetFormatsPerCountry = {\n            \"{{{road}}} {{{house_number}}}\": [\"af\", \"ai\", \"al\", \"ao\", \"ar\", \"at\", \"aw\", \"ax\", \"ba\", \"be\", \"bg\", \"bi\", \"bo\", \"bq\", \"br\", \"bs\", \"bt\", \"bv\", \"bw\", \"cf\", \"ch\", \"cl\", \"cm\", \"co\", \"cr\", \"cu\", \"cv\", \"cw\", \"cy\", \"cz\", \"de\", \"dk\", \"do\", \"ec\", \"ee\", \"eh\", \"er\", \"et\", \"fi\", \"fo\", \"gd\", \"ge\", \"gl\", \"gq\", \"gr\", \"gt\", \"gw\", \"hn\", \"hr\", \"ht\", \"hu\", \"id\", \"il\", \"ir\", \"is\", \"jo\", \"ki\", \"km\", \"kp\", \"kw\", \"lc\", \"li\", \"lr\", \"lt\", \"lv\", \"ly\", \"me\", \"mk\", \"ml\", \"mn\", \"mo\", \"mx\", \"ni\", \"nl\", \"no\", \"np\", \"pa\", \"pe\", \"pl\", \"ps\", \"pt\", \"pw\", \"py\", \"qa\", \"ro\", \"rs\", \"ru\", \"sb\", \"sd\", \"se\", \"si\", \"sj\", \"sk\", \"so\", \"sr\", \"ss\", \"st\", \"sv\", \"sx\", \"sz\", \"td\", \"tj\", \"tl\", \"tr\", \"um\", \"uz\", \"uy\", \"vc\", \"ve\", \"vu\", \"ws\"],\n            \"{{{house_number}}} {{{road}}}\": [\"ad\", \"ae\", \"ag\", \"am\", \"as\", \"au\", \"az\", \"bb\", \"bd\", \"bf\", \"bh\", \"bl\", \"bm\", \"bz\", \"ca\", \"cc\", \"ci\", \"ck\", \"cn\", \"cx\", \"dj\", \"dm\", \"dz\", \"eg\", \"fj\", \"fk\", \"fm\", \"fr\", \"ga\", \"gb\", \"gf\", \"gg\", \"gh\", \"gi\", \"gm\", \"gn\", \"gp\", \"gs\", \"gu\", \"gy\", \"hk\", \"hm\", \"ie\", \"im\", \"io\", \"iq\", \"je\", \"jm\", \"jp\", \"ke\", \"kh\", \"kn\", \"kr\", \"ky\", \"lb\", \"lk\", \"ls\", \"lu\", \"ma\", \"mc\", \"mf\", \"mh\", \"mg\", \"mm\", \"mp\", \"ms\", \"mt\", \"mq\", \"mv\", \"mw\", \"my\", \"na\", \"nc\", \"ne\", \"nf\", \"ng\", \"nr\", \"nu\", \"nz\", \"om\", \"pf\", \"pg\", \"ph\", \"pk\", \"pm\", \"pr\", \"re\", \"rw\", \"sa\", \"sc\", \"sg\", \"sh\", \"sl\", \"sn\", \"tc\", \"tf\", \"th\", \"tk\", \"tn\", \"to\", \"tt\", \"tv\", \"tw\", \"tz\", \"ug\", \"us\", \"vg\", \"vi\", \"wf\", \"yt\", \"za\", \"zm\", \"zw\"],\n            \"{{{road}}}, {{{house_number}}}\": [\"by\", \"es\", \"it\", \"kg\", \"kz\", \"md\", \"mz\", \"sm\", \"sy\", \"ua\", \"va\"],\n            \"{{{house_number}}}, {{{road}}}\": [\"bj\", \"bn\", \"cd\", \"cg\", \"in\", \"la\", \"mr\", \"mu\", \"tg\", \"tm\", \"vn\", \"ye\"]\n        };\n        const format = Object.keys(houseNumberAndStreetFormatsPerCountry).find(key => houseNumberAndStreetFormatsPerCountry[key].indexOf(featureProperties.country_code) >= 0) || \"{{{road}}} {{{house_number}}}\";\n        if (street) {\n            // add street and housenumber\n            featureProperties.street = street.replace(/(^\\w|\\s\\w|[-]\\w)/g, m => m.toUpperCase());\n            featureProperties.housenumber = housenumber;\n            const addressPart = format.replace(\"{{{road}}}\", featureProperties.street).replace(\"{{{house_number}}}\", housenumber);\n            featureProperties.address_line1 = addressPart;\n            featureProperties.address_line2 = featureProperties.formatted;\n            featureProperties.formatted = addressPart + \", \" + featureProperties.formatted;\n        }\n        else {\n            // add house number only\n            featureProperties.housenumber = housenumber;\n            const addressPart = format.replace(\"{{{road}}}\", featureProperties.street).replace(\"{{{house_number}}}\", housenumber);\n            featureProperties.address_line1 = featureProperties.address_line1.replace(featureProperties.street, addressPart);\n            ;\n            featureProperties.formatted = featureProperties.formatted.replace(featureProperties.street, addressPart);\n        }\n    }\n    extendByNonVerifiedValues(features, parsedAddress) {\n        features.forEach((feature) => {\n            if (parsedAddress.housenumber &&\n                this.options.allowNonVerifiedHouseNumber && feature.properties.rank.match_type === \"match_by_street\") {\n                // add housenumber\n                this.addHouseNumberToFormatted(feature.properties, null, parsedAddress.housenumber);\n                feature.properties.nonVerifiedParts = [\"housenumber\"];\n            }\n            else if (parsedAddress.street && parsedAddress.housenumber &&\n                this.options.allowNonVerifiedStreet &&\n                (feature.properties.rank.match_type === \"match_by_city_or_disrict\" || feature.properties.rank.match_type === \"match_by_postcode\")) {\n                // add housenumber and street\n                this.addHouseNumberToFormatted(feature.properties, parsedAddress.street, parsedAddress.housenumber);\n                feature.properties.nonVerifiedParts = [\"housenumber\", \"street\"];\n            }\n            else if (parsedAddress.street &&\n                this.options.allowNonVerifiedStreet &&\n                (feature.properties.rank.match_type === \"match_by_city_or_disrict\" || feature.properties.rank.match_type === \"match_by_postcode\")) {\n                // add street\n                feature.properties.street = parsedAddress.street.replace(/(^\\w|\\s\\w|[-]\\w)/g, (m) => m.toUpperCase());\n                feature.properties.address_line1 = feature.properties.street;\n                feature.properties.address_line2 = feature.properties.formatted;\n                feature.properties.formatted = feature.properties.street + \", \" + feature.properties.formatted;\n                feature.properties.nonVerifiedParts = [\"street\"];\n            }\n        });\n    }\n    getStyledAddressSingleValue(value, currentValue) {\n        let displayValue = value;\n        const valueIndex = (displayValue || '').toLowerCase().indexOf(currentValue.toLowerCase());\n        if (valueIndex >= 0) {\n            displayValue = displayValue.substring(0, valueIndex) +\n                `<strong>${displayValue.substring(valueIndex, valueIndex + currentValue.length)}</strong>` +\n                displayValue.substring(valueIndex + currentValue.length);\n        }\n        return `<span class=\"main-part\">${displayValue}</span>`;\n    }\n    getStyledAddress(featureProperties, currentValue) {\n        let mainPart;\n        let secondaryPart;\n        const parts = featureProperties.formatted.split(',').map((part) => part.trim());\n        if (featureProperties.name) {\n            mainPart = parts[0];\n            secondaryPart = parts.slice(1).join(', ');\n        }\n        else {\n            const mainElements = Math.min(2, Math.max(parts.length - 2, 1));\n            mainPart = parts.slice(0, mainElements).join(', ');\n            secondaryPart = parts.slice(mainElements).join(', ');\n        }\n        if (featureProperties.nonVerifiedParts && featureProperties.nonVerifiedParts.length) {\n            featureProperties.nonVerifiedParts.forEach((part) => {\n                mainPart = mainPart.replace(featureProperties[part], `<span class=\"non-verified\">${featureProperties[part]}</span>`);\n            });\n        }\n        else {\n            const valueIndex = mainPart.toLowerCase().indexOf(currentValue.toLowerCase());\n            if (valueIndex >= 0) {\n                mainPart = mainPart.substring(0, valueIndex) +\n                    `<strong>${mainPart.substring(valueIndex, valueIndex + currentValue.length)}</strong>` +\n                    mainPart.substring(valueIndex + currentValue.length);\n            }\n        }\n        return `<span class=\"main-part\">${mainPart}</span><span class=\"secondary-part\">${secondaryPart}</span>`;\n    }\n    onUserKeyPress(event) {\n        if (this.autocompleteItemsElement) {\n            const itemElements = this.autocompleteItemsElement.getElementsByTagName(\"div\");\n            if (event.code === 'ArrowDown') {\n                event.preventDefault();\n                /*If the arrow DOWN key is pressed, increase the focusedItemIndex variable:*/\n                this.focusedItemIndex++;\n                if (this.focusedItemIndex >= itemElements.length)\n                    this.focusedItemIndex = 0;\n                /*and and make the current item more visible:*/\n                this.setActive(itemElements, this.focusedItemIndex);\n            }\n            else if (event.code === 'ArrowUp') {\n                event.preventDefault();\n                /*If the arrow UP key is pressed, decrease the focusedItemIndex variable:*/\n                this.focusedItemIndex--;\n                if (this.focusedItemIndex < 0)\n                    this.focusedItemIndex = (itemElements.length - 1);\n                /*and and make the current item more visible:*/\n                this.setActive(itemElements, this.focusedItemIndex);\n            }\n            else if (event.code === \"Enter\") {\n                /* If the ENTER key is pressed and value as selected, close the list*/\n                event.preventDefault();\n                if (this.focusedItemIndex > -1) {\n                    if (this.options.skipSelectionOnArrowKey) {\n                        // select the location if it wasn't selected by navigation\n                        this.setValueAndNotify(this.currentItems[this.focusedItemIndex]);\n                    }\n                    else {\n                        this.closeDropDownList();\n                    }\n                }\n            }\n            else if (event.code === \"Escape\") {\n                /* If the ESC key is presses, close the list */\n                this.closeDropDownList();\n            }\n        }\n        else {\n            if (event.code == 'ArrowDown') {\n                /* Open dropdown list again */\n                this.openDropdownAgain();\n            }\n        }\n    }\n    setActive(items, index) {\n        if (!items || !items.length)\n            return false;\n        for (var i = 0; i < items.length; i++) {\n            items[i].classList.remove(\"active\");\n        }\n        /* Add class \"autocomplete-active\" to the active element*/\n        items[index].classList.add(\"active\");\n        if (!this.options.skipSelectionOnArrowKey) {\n            // Change input value and notify\n            if (this.postprocessHook && typeof this.postprocessHook === 'function') {\n                this.inputElement.value = this.postprocessHook(this.currentItems[index]);\n            }\n            else {\n                this.inputElement.value = this.currentItems[index].properties.formatted;\n            }\n            this.notifyValueSelected(this.currentItems[index]);\n        }\n    }\n    setValueAndNotify(feature) {\n        if (this.postprocessHook && typeof this.postprocessHook === 'function') {\n            this.inputElement.value = this.postprocessHook(feature);\n        }\n        else {\n            this.inputElement.value = feature.properties.formatted;\n        }\n        this.notifyValueSelected(feature);\n        /* Close the list of autocompleted values: */\n        this.closeDropDownList();\n    }\n    clearFieldAndNotify(event) {\n        event.stopPropagation();\n        this.inputElement.value = '';\n        this.inputClearButton.classList.remove(\"visible\");\n        // Cancel previous request\n        if (this.currentPromiseReject) {\n            this.currentPromiseReject({\n                canceled: true\n            });\n            this.currentPromiseReject = null;\n        }\n        // Cancel previous timeout\n        if (this.currentTimeout) {\n            window.clearTimeout(this.currentTimeout);\n            this.currentTimeout = null;\n        }\n        this.closeDropDownList();\n        // notify here\n        this.notifyValueSelected(null);\n    }\n    closeDropDownList() {\n        if (this.autocompleteItemsElement) {\n            this.container.removeChild(this.autocompleteItemsElement);\n            this.autocompleteItemsElement = null;\n            this.notifyClosed();\n        }\n    }\n    addIcon(element, icon) {\n        //FortAwesome icons 5. Licence - https://fontawesome.com/license/free\n        const icons = {\n            \"close\": {\n                path: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\",\n                viewbox: \"0 0 24 24\"\n            },\n            \"map-marker\": {\n                path: \"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\",\n                viewbox: \"0 0 384 512\"\n            },\n            \"road\": {\n                path: \"M573.19 402.67l-139.79-320C428.43 71.29 417.6 64 405.68 64h-97.59l2.45 23.16c.5 4.72-3.21 8.84-7.96 8.84h-29.16c-4.75 0-8.46-4.12-7.96-8.84L267.91 64h-97.59c-11.93 0-22.76 7.29-27.73 18.67L2.8 402.67C-6.45 423.86 8.31 448 30.54 448h196.84l10.31-97.68c.86-8.14 7.72-14.32 15.91-14.32h68.8c8.19 0 15.05 6.18 15.91 14.32L348.62 448h196.84c22.23 0 36.99-24.14 27.73-45.33zM260.4 135.16a8 8 0 0 1 7.96-7.16h39.29c4.09 0 7.53 3.09 7.96 7.16l4.6 43.58c.75 7.09-4.81 13.26-11.93 13.26h-40.54c-7.13 0-12.68-6.17-11.93-13.26l4.59-43.58zM315.64 304h-55.29c-9.5 0-16.91-8.23-15.91-17.68l5.07-48c.86-8.14 7.72-14.32 15.91-14.32h45.15c8.19 0 15.05 6.18 15.91 14.32l5.07 48c1 9.45-6.41 17.68-15.91 17.68z\",\n                viewbox: \"0 0 576 512\"\n            },\n            \"city\": {\n                path: \"M616 192H480V24c0-13.26-10.74-24-24-24H312c-13.26 0-24 10.74-24 24v72h-64V16c0-8.84-7.16-16-16-16h-16c-8.84 0-16 7.16-16 16v80h-64V16c0-8.84-7.16-16-16-16H80c-8.84 0-16 7.16-16 16v80H24c-13.26 0-24 10.74-24 24v360c0 17.67 14.33 32 32 32h576c17.67 0 32-14.33 32-32V216c0-13.26-10.75-24-24-24zM128 404c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12H76c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm128 192c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12V76c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm160 288c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40zm0-96c0 6.63-5.37 12-12 12h-40c-6.63 0-12-5.37-12-12v-40c0-6.63 5.37-12 12-12h40c6.63 0 12 5.37 12 12v40z\",\n                viewbox: \"0 0 640 512\"\n            }\n        };\n        var svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'svg');\n        svgElement.setAttribute('viewBox', icons[icon].viewbox);\n        svgElement.setAttribute('height', \"24\");\n        var iconElement = document.createElementNS(\"http://www.w3.org/2000/svg\", 'path');\n        iconElement.setAttribute(\"d\", icons[icon].path);\n        iconElement.setAttribute('fill', 'currentColor');\n        svgElement.appendChild(iconElement);\n        element.appendChild(svgElement);\n    }\n    addFeatureIcon(element, type, countryCode) {\n        const iconMap = {\n            'unknown': 'map-marker',\n            'amenity': 'map-marker',\n            'building': 'map-marker',\n            'street': 'road',\n            'suburb': 'city',\n            'district': 'city',\n            'postcode': 'city',\n            'city': 'city',\n            'county': 'city',\n            'state': 'city'\n        };\n        const countryData = countiesData.find(county => countryCode && county.code.toLowerCase() === countryCode.toLowerCase());\n        if ((type === 'country') && countryData) {\n            element.classList.add(\"emoji\");\n            ;\n            const emojiElement = document.createElement('span');\n            emojiElement.innerText = countryData.emoji;\n            element.appendChild(emojiElement);\n        }\n        else if (iconMap[type]) {\n            this.addIcon(element, iconMap[type]);\n        }\n        else {\n            this.addIcon(element, 'map-marker');\n        }\n    }\n    notifyValueSelected(feature) {\n        // Cancel previous place details request\n        if (this.currentPlaceDetailsPromiseReject) {\n            this.currentPlaceDetailsPromiseReject({\n                canceled: true\n            });\n            this.currentPlaceDetailsPromiseReject = null;\n        }\n        if (!this.options.addDetails || !feature || feature.properties.nonVerifiedParts?.length) {\n            this.changeCallbacks.forEach(callback => callback(feature));\n        }\n        else {\n            let promise;\n            if (this.sendPlaceDetailsRequestAlt) {\n                promise = this.sendPlaceDetailsRequestAlt(feature, this);\n            }\n            else {\n                promise = this.sendPlaceDetailsRequest(feature);\n            }\n            promise.then((detailesFeature) => {\n                this.changeCallbacks.forEach(callback => callback(detailesFeature));\n                this.currentPlaceDetailsPromiseReject = null;\n            }, (err) => {\n                if (!err.canceled) {\n                    console.log(err);\n                    this.changeCallbacks.forEach(callback => callback(feature));\n                    this.currentPlaceDetailsPromiseReject = null;\n                }\n            });\n        }\n    }\n    notifySuggestions(features) {\n        this.suggestionsChangeCallbacks.forEach(callback => callback(features));\n    }\n    notifyOpened() {\n        this.openCallbacks.forEach(callback => callback(true));\n    }\n    notifyClosed() {\n        this.closeCallbacks.forEach(callback => callback(false));\n    }\n    openDropdownAgain() {\n        const event = document.createEvent('Event');\n        event.initEvent('input', true, true);\n        this.inputElement.dispatchEvent(event);\n    }\n    generatePlacesUrlUrl(placeId) {\n        let url = `${this.placeDetailsUrl}?id=${placeId}&apiKey=${this.apiKey}`;\n        if (this.options.lang) {\n            url += `&lang=${this.options.lang}`;\n        }\n        return url;\n    }\n    generateUrl(value) {\n        let url = `${this.geocoderUrl}?text=${encodeURIComponent(value)}&apiKey=${this.apiKey}`;\n        // Add type of the location if set. Learn more about possible parameters on https://apidocs.geoapify.com/docs/geocoding/api/api\n        if (this.options.type) {\n            url += `&type=${this.options.type}`;\n        }\n        if (this.options.limit) {\n            url += `&limit=${this.options.limit}`;\n        }\n        if (this.options.lang) {\n            url += `&lang=${this.options.lang}`;\n        }\n        const filters = [];\n        const filterByCountryCodes = this.options.filter[this.BY_COUNTRYCODE];\n        const filterByCircle = this.options.filter[this.BY_CIRCLE];\n        const filterByRect = this.options.filter[this.BY_RECT];\n        const filterByPlace = this.options.filter[this.BY_PLACE];\n        if (filterByCountryCodes && filterByCountryCodes.length) {\n            filters.push(`countrycode:${filterByCountryCodes.join(',').toLowerCase()}`);\n        }\n        if (filterByCircle && this.isLatitude(filterByCircle.lat) && this.isLongitude(filterByCircle.lon) && filterByCircle.radiusMeters > 0) {\n            filters.push(`circle:${filterByCircle.lon},${filterByCircle.lat},${filterByCircle.radiusMeters}`);\n        }\n        if (filterByRect && this.isLatitude(filterByRect.lat1) && this.isLongitude(filterByRect.lon1) && this.isLatitude(filterByRect.lat2) && this.isLongitude(filterByRect.lon2)) {\n            filters.push(`rect:${filterByRect.lon1},${filterByRect.lat1},${filterByRect.lon2},${filterByRect.lat2}`);\n        }\n        if (filterByPlace) {\n            filters.push(`place:${filterByPlace}`);\n        }\n        url += filters.length ? `&filter=${filters.join('|')}` : '';\n        const bias = [];\n        const biasByCountryCodes = this.options.bias[this.BY_COUNTRYCODE];\n        const biasByCircle = this.options.bias[this.BY_CIRCLE];\n        const biasByRect = this.options.bias[this.BY_RECT];\n        const biasByProximity = this.options.bias[this.BY_PROXIMITY];\n        if (biasByCountryCodes && biasByCountryCodes.length) {\n            bias.push(`countrycode:${biasByCountryCodes.join(',').toLowerCase()}`);\n        }\n        if (biasByCircle && this.isLatitude(biasByCircle.lat) && this.isLongitude(biasByCircle.lon) && biasByCircle.radiusMeters > 0) {\n            bias.push(`circle:${biasByCircle.lon},${biasByCircle.lat},${biasByCircle.radiusMeters}`);\n        }\n        if (biasByRect && this.isLatitude(biasByRect.lat1) && this.isLongitude(biasByRect.lon1) && this.isLatitude(biasByRect.lat2) && this.isLongitude(biasByRect.lon2)) {\n            bias.push(`rect:${biasByRect.lon1},${biasByRect.lat1},${biasByRect.lon2},${biasByRect.lat2}`);\n        }\n        if (biasByProximity && this.isLatitude(biasByProximity.lat) && this.isLongitude(biasByProximity.lon)) {\n            bias.push(`proximity:${biasByProximity.lon},${biasByProximity.lat}`);\n        }\n        url += bias.length ? `&bias=${bias.join('|')}` : '';\n        return url;\n    }\n    isLatitude(num) {\n        return num !== '' && num !== null && isFinite(num) && Math.abs(num) <= 90;\n    }\n    isLongitude(num) {\n        return num !== '' && num !== null && isFinite(num) && Math.abs(num) <= 180;\n    }\n}\n//# sourceMappingURL=autocomplete.js.map"],"names":["container","apiKey","inputElement","inputClearButton","autocompleteItemsElement","focusedItemIndex","currentItems","currentPromiseReject","currentPlaceDetailsPromiseReject","currentTimeout","changeCallbacks","suggestionsChangeCallbacks","inputCallbacks","openCallbacks","closeCallbacks","preprocessHook","postprocessHook","suggestionsFilter","sendGeocoderRequestAlt","sendPlaceDetailsRequestAlt","geocoderUrl","placeDetailsUrl","options","limit","debounceDelay","BY_COUNTRYCODE","BY_RECT","BY_CIRCLE","BY_PROXIMITY","BY_PLACE","constructor","this","filter","bias","countryCodes","addFilterByCountry","position","addBiasByProximity","document","createElement","classList","add","setAttribute","placeholder","appendChild","addIcon","addEventListener","clearFieldAndNotify","bind","onUserInput","onUserKeyPress","event","target","closeDropDownList","openDropdownAgain","setType","type","setLang","lang","setCountryCodes","codes","console","warn","setPosition","setLimit","setValue","value","remove","getValue","addFilterByCircle","filterByCircle","addFilterByRect","filterByRect","addFilterByPlace","filterByPlace","clearFilters","addBiasByCountry","addBiasByCircle","biasByCircle","addBiasByRect","biasByRect","biasByProximity","clearBias","on","operation","callback","indexOf","push","off","splice","once","current","currentListener","setSuggestionsFilter","suggestionsFilterFunc","setPreprocessHook","preprocessHookFunc","setPostprocessHook","postprocessHookFunc","setSendGeocoderRequestFunc","sendGeocoderRequestFunc","setSendPlaceDetailsRequestFunc","sendPlaceDetailsRequestFunc","isOpen","close","open","sendGeocoderRequest","Promise","resolve","reject","url","generateUrl","fetch","then","response","ok","json","data","sendPlaceDetailsRequest","feature","properties","datasource","sourcename","place_id","generatePlacesUrlUrl","features","length","currentValue","userEnteredValue","forEach","canceled","window","clearTimeout","setTimeout","promise","query","parsed","allowNonVerifiedHouseNumber","allowNonVerifiedStreet","extendByNonVerifiedValues","notifySuggestions","notifyOpened","index","itemElement","skipIcons","iconElement","addFeatureIcon","result_type","country_code","textElement","innerHTML","getStyledAddressSingleValue","getStyledAddress","e","stopPropagation","setValueAndNotify","err","log","addHouseNumberToFormatted","featureProperties","street","housenumber","houseNumberAndStreetFormatsPerCountry","format","Object","keys","find","key","replace","m","toUpperCase","addressPart","address_line1","address_line2","formatted","parsedAddress","rank","match_type","nonVerifiedParts","displayValue","valueIndex","toLowerCase","substring","mainPart","secondaryPart","parts","split","map","part","trim","name","slice","join","mainElements","Math","min","max","itemElements","getElementsByTagName","code","preventDefault","setActive","skipSelectionOnArrowKey","items","i","notifyValueSelected","removeChild","notifyClosed","element","icon","icons","path","viewbox","road","city","svgElement","createElementNS","countryCode","iconMap","unknown","amenity","building","suburb","district","postcode","county","state","countryData","countiesData","emojiElement","innerText","emoji","addDetails","detailesFeature","createEvent","initEvent","dispatchEvent","placeId","encodeURIComponent","filters","filterByCountryCodes","isLatitude","lat","isLongitude","lon","radiusMeters","lat1","lon1","lat2","lon2","biasByCountryCodes","num","isFinite","abs"],"mappings":"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"}